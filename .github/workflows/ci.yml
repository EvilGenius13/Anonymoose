name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      memcached:
        image: bitnami/memcached:latest
        ports:
          - 11211:11211
        env:
          MEMCACHED_USERNAME: dev
          MEMCACHED_PASSWORD: dev
      minio:
        image: quay.io/minio/minio:latest
        ports:
          - 9000:9000
          - 9001:9001
        env:
          MINIO_ROOT_USER: development
          MINIO_ROOT_PASSWORD: development
        options: >
          --name minio
          --health-cmd "curl -f http://localhost:9000/minio/health/live || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.2

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install

      - name: Start MinIO
        run: |
          docker exec minio mkdir -p /data
          docker exec -d minio minio server /data --console-address :9001
        env:
          MINIO_ROOT_USER: development
          MINIO_ROOT_PASSWORD: development

      - name: Wait for MinIO to be healthy
        run: |
          until [ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:9000/minio/health/live)" == "200" ]; do
            echo "Waiting for MinIO to be healthy..."
            sleep 5
          done

      - name: Run tests
        env:
          MEMCACHED_ADDRESS: localhost:11211
          MEMCACHED_USERNAME: dev
          MEMCACHED_PASSWORD: dev
          S3_ENDPOINT: http://localhost:9000
          S3_REGION: us-east-1
          S3_ACCESS_KEY_ID: development
          S3_SECRET_ACCESS_KEY: development
          S3_BUCKET: test-bucket
        run: |
          bundle exec rake test

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: evilgenius13/anonymoose:dev
